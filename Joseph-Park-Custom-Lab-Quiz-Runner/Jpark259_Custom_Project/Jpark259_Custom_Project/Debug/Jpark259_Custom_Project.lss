
Jpark259_Custom_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000076  00800100  000007aa  0000083e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004b  00800176  00800176  000008b4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008b4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000924  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001390  00000000  00000000  000009ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a2b  00000000  00000000  00001d7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009f1  00000000  00000000  000027a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e4  00000000  00000000  00003198  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006f6  00000000  00000000  0000337c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007c9  00000000  00000000  00003a72  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  0000423b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	7e c0       	rjmp	.+252    	; 0x132 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea ea       	ldi	r30, 0xAA	; 170
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 37       	cpi	r26, 0x76	; 118
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 e7       	ldi	r26, 0x76	; 118
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a1 3c       	cpi	r26, 0xC1	; 193
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	bf d2       	rcall	.+1406   	; 0x642 <main>
  c4:	70 c3       	rjmp	.+1760   	; 0x7a6 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TimerSet>:
		if(c==0){return b;}
		a = b;
		b = c;
	}
	return 0;
}
  c8:	60 93 2a 01 	sts	0x012A, r22	; 0x80012a <_avr_timer_M>
  cc:	70 93 2b 01 	sts	0x012B, r23	; 0x80012b <_avr_timer_M+0x1>
  d0:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <_avr_timer_M+0x2>
  d4:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <_avr_timer_M+0x3>
  d8:	60 93 a1 01 	sts	0x01A1, r22	; 0x8001a1 <_avr_timer_cntcurr>
  dc:	70 93 a2 01 	sts	0x01A2, r23	; 0x8001a2 <_avr_timer_cntcurr+0x1>
  e0:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <_avr_timer_cntcurr+0x2>
  e4:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <_avr_timer_cntcurr+0x3>
  e8:	08 95       	ret

000000ea <TimerOn>:
  ea:	8b e0       	ldi	r24, 0x0B	; 11
  ec:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  f0:	8d e7       	ldi	r24, 0x7D	; 125
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  f8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  fc:	82 e0       	ldi	r24, 0x02	; 2
  fe:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 102:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 106:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 10a:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <_avr_timer_M>
 10e:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <_avr_timer_M+0x1>
 112:	a0 91 2c 01 	lds	r26, 0x012C	; 0x80012c <_avr_timer_M+0x2>
 116:	b0 91 2d 01 	lds	r27, 0x012D	; 0x80012d <_avr_timer_M+0x3>
 11a:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <_avr_timer_cntcurr>
 11e:	90 93 a2 01 	sts	0x01A2, r25	; 0x8001a2 <_avr_timer_cntcurr+0x1>
 122:	a0 93 a3 01 	sts	0x01A3, r26	; 0x8001a3 <_avr_timer_cntcurr+0x2>
 126:	b0 93 a4 01 	sts	0x01A4, r27	; 0x8001a4 <_avr_timer_cntcurr+0x3>
 12a:	8f b7       	in	r24, 0x3f	; 63
 12c:	80 68       	ori	r24, 0x80	; 128
 12e:	8f bf       	out	0x3f, r24	; 63
 130:	08 95       	ret

00000132 <__vector_13>:
 132:	1f 92       	push	r1
 134:	0f 92       	push	r0
 136:	0f b6       	in	r0, 0x3f	; 63
 138:	0f 92       	push	r0
 13a:	11 24       	eor	r1, r1
 13c:	8f 93       	push	r24
 13e:	9f 93       	push	r25
 140:	af 93       	push	r26
 142:	bf 93       	push	r27
 144:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <_avr_timer_cntcurr>
 148:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <_avr_timer_cntcurr+0x1>
 14c:	a0 91 a3 01 	lds	r26, 0x01A3	; 0x8001a3 <_avr_timer_cntcurr+0x2>
 150:	b0 91 a4 01 	lds	r27, 0x01A4	; 0x8001a4 <_avr_timer_cntcurr+0x3>
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	a1 09       	sbc	r26, r1
 158:	b1 09       	sbc	r27, r1
 15a:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <_avr_timer_cntcurr>
 15e:	90 93 a2 01 	sts	0x01A2, r25	; 0x8001a2 <_avr_timer_cntcurr+0x1>
 162:	a0 93 a3 01 	sts	0x01A3, r26	; 0x8001a3 <_avr_timer_cntcurr+0x2>
 166:	b0 93 a4 01 	sts	0x01A4, r27	; 0x8001a4 <_avr_timer_cntcurr+0x3>
 16a:	89 2b       	or	r24, r25
 16c:	8a 2b       	or	r24, r26
 16e:	8b 2b       	or	r24, r27
 170:	99 f4       	brne	.+38     	; 0x198 <__vector_13+0x66>
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <TimerFlag>
 178:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <_avr_timer_M>
 17c:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <_avr_timer_M+0x1>
 180:	a0 91 2c 01 	lds	r26, 0x012C	; 0x80012c <_avr_timer_M+0x2>
 184:	b0 91 2d 01 	lds	r27, 0x012D	; 0x80012d <_avr_timer_M+0x3>
 188:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <_avr_timer_cntcurr>
 18c:	90 93 a2 01 	sts	0x01A2, r25	; 0x8001a2 <_avr_timer_cntcurr+0x1>
 190:	a0 93 a3 01 	sts	0x01A3, r26	; 0x8001a3 <_avr_timer_cntcurr+0x2>
 194:	b0 93 a4 01 	sts	0x01A4, r27	; 0x8001a4 <_avr_timer_cntcurr+0x3>
 198:	bf 91       	pop	r27
 19a:	af 91       	pop	r26
 19c:	9f 91       	pop	r25
 19e:	8f 91       	pop	r24
 1a0:	0f 90       	pop	r0
 1a2:	0f be       	out	0x3f, r0	; 63
 1a4:	0f 90       	pop	r0
 1a6:	1f 90       	pop	r1
 1a8:	18 95       	reti

000001aa <delay_ms>:
 1aa:	18 16       	cp	r1, r24
 1ac:	19 06       	cpc	r1, r25
 1ae:	5c f0       	brlt	.+22     	; 0x1c6 <delay_ms+0x1c>
 1b0:	08 95       	ret
 1b2:	00 00       	nop
 1b4:	21 50       	subi	r18, 0x01	; 1
 1b6:	31 09       	sbc	r19, r1
 1b8:	e1 f7       	brne	.-8      	; 0x1b2 <delay_ms+0x8>
 1ba:	4f 5f       	subi	r20, 0xFF	; 255
 1bc:	5f 4f       	sbci	r21, 0xFF	; 255
 1be:	84 17       	cp	r24, r20
 1c0:	95 07       	cpc	r25, r21
 1c2:	19 f4       	brne	.+6      	; 0x1ca <delay_ms+0x20>
 1c4:	08 95       	ret
 1c6:	40 e0       	ldi	r20, 0x00	; 0
 1c8:	50 e0       	ldi	r21, 0x00	; 0
 1ca:	27 e0       	ldi	r18, 0x07	; 7
 1cc:	33 e0       	ldi	r19, 0x03	; 3
 1ce:	f1 cf       	rjmp	.-30     	; 0x1b2 <delay_ms+0x8>

000001d0 <LCD_WriteCommand>:
 1d0:	10 98       	cbi	0x02, 0	; 2
 1d2:	8b b9       	out	0x0b, r24	; 11
 1d4:	11 9a       	sbi	0x02, 1	; 2
 1d6:	00 00       	nop
 1d8:	11 98       	cbi	0x02, 1	; 2
 1da:	82 e0       	ldi	r24, 0x02	; 2
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	e5 cf       	rjmp	.-54     	; 0x1aa <delay_ms>
 1e0:	08 95       	ret

000001e2 <LCD_ClearScreen>:
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	f5 cf       	rjmp	.-22     	; 0x1d0 <LCD_WriteCommand>
 1e6:	08 95       	ret

000001e8 <LCD_Cursor>:
 1e8:	81 31       	cpi	r24, 0x11	; 17
 1ea:	18 f4       	brcc	.+6      	; 0x1f2 <LCD_Cursor+0xa>
 1ec:	81 58       	subi	r24, 0x81	; 129
 1ee:	f0 cf       	rjmp	.-32     	; 0x1d0 <LCD_WriteCommand>
 1f0:	08 95       	ret
 1f2:	81 55       	subi	r24, 0x51	; 81
 1f4:	ed cf       	rjmp	.-38     	; 0x1d0 <LCD_WriteCommand>
 1f6:	08 95       	ret

000001f8 <LCD_init>:
 1f8:	84 e6       	ldi	r24, 0x64	; 100
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	d6 df       	rcall	.-84     	; 0x1aa <delay_ms>
 1fe:	88 e3       	ldi	r24, 0x38	; 56
 200:	e7 df       	rcall	.-50     	; 0x1d0 <LCD_WriteCommand>
 202:	86 e0       	ldi	r24, 0x06	; 6
 204:	e5 df       	rcall	.-54     	; 0x1d0 <LCD_WriteCommand>
 206:	8f e0       	ldi	r24, 0x0F	; 15
 208:	e3 df       	rcall	.-58     	; 0x1d0 <LCD_WriteCommand>
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	e1 df       	rcall	.-62     	; 0x1d0 <LCD_WriteCommand>
 20e:	8a e0       	ldi	r24, 0x0A	; 10
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	cb cf       	rjmp	.-106    	; 0x1aa <delay_ms>
 214:	08 95       	ret

00000216 <LCD_WriteData>:
 216:	10 9a       	sbi	0x02, 0	; 2
 218:	8b b9       	out	0x0b, r24	; 11
 21a:	11 9a       	sbi	0x02, 1	; 2
 21c:	00 00       	nop
 21e:	11 98       	cbi	0x02, 1	; 2
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	c2 cf       	rjmp	.-124    	; 0x1aa <delay_ms>
 226:	08 95       	ret

00000228 <LCD_build>:
 228:	88 e4       	ldi	r24, 0x48	; 72
 22a:	d2 df       	rcall	.-92     	; 0x1d0 <LCD_WriteCommand>
 22c:	84 e0       	ldi	r24, 0x04	; 4
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	f2 df       	rcall	.-28     	; 0x216 <LCD_WriteData>
 232:	8e e0       	ldi	r24, 0x0E	; 14
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	ef df       	rcall	.-34     	; 0x216 <LCD_WriteData>
 238:	8e e0       	ldi	r24, 0x0E	; 14
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	ec df       	rcall	.-40     	; 0x216 <LCD_WriteData>
 23e:	8e e0       	ldi	r24, 0x0E	; 14
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	e9 df       	rcall	.-46     	; 0x216 <LCD_WriteData>
 244:	8f e1       	ldi	r24, 0x1F	; 31
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	e6 df       	rcall	.-52     	; 0x216 <LCD_WriteData>
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	e3 df       	rcall	.-58     	; 0x216 <LCD_WriteData>
 250:	84 e0       	ldi	r24, 0x04	; 4
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	e0 df       	rcall	.-64     	; 0x216 <LCD_WriteData>
 256:	80 e0       	ldi	r24, 0x00	; 0
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	dd cf       	rjmp	.-70     	; 0x216 <LCD_WriteData>
 25c:	08 95       	ret

0000025e <LCD_DisplayString>:
 25e:	0f 93       	push	r16
 260:	1f 93       	push	r17
 262:	cf 93       	push	r28
 264:	df 93       	push	r29
 266:	18 2f       	mov	r17, r24
 268:	eb 01       	movw	r28, r22
 26a:	bb df       	rcall	.-138    	; 0x1e2 <LCD_ClearScreen>
 26c:	88 81       	ld	r24, Y
 26e:	88 23       	and	r24, r24
 270:	51 f0       	breq	.+20     	; 0x286 <LCD_DisplayString+0x28>
 272:	01 e0       	ldi	r16, 0x01	; 1
 274:	01 0f       	add	r16, r17
 276:	81 2f       	mov	r24, r17
 278:	b7 df       	rcall	.-146    	; 0x1e8 <LCD_Cursor>
 27a:	89 91       	ld	r24, Y+
 27c:	cc df       	rcall	.-104    	; 0x216 <LCD_WriteData>
 27e:	10 2f       	mov	r17, r16
 280:	88 81       	ld	r24, Y
 282:	81 11       	cpse	r24, r1
 284:	f6 cf       	rjmp	.-20     	; 0x272 <LCD_DisplayString+0x14>
 286:	df 91       	pop	r29
 288:	cf 91       	pop	r28
 28a:	1f 91       	pop	r17
 28c:	0f 91       	pop	r16
 28e:	08 95       	ret

00000290 <LCD_Cursor_Off>:
 290:	8c e0       	ldi	r24, 0x0C	; 12
 292:	9e cf       	rjmp	.-196    	; 0x1d0 <LCD_WriteCommand>
 294:	08 95       	ret

00000296 <map_tick>:
 296:	81 30       	cpi	r24, 0x01	; 1
 298:	91 05       	cpc	r25, r1
 29a:	79 f0       	breq	.+30     	; 0x2ba <map_tick+0x24>
 29c:	82 30       	cpi	r24, 0x02	; 2
 29e:	91 05       	cpc	r25, r1
 2a0:	69 f1       	breq	.+90     	; 0x2fc <map_tick+0x66>
 2a2:	89 2b       	or	r24, r25
 2a4:	99 f5       	brne	.+102    	; 0x30c <map_tick+0x76>
 2a6:	31 e0       	ldi	r19, 0x01	; 1
 2a8:	20 e0       	ldi	r18, 0x00	; 0
 2aa:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <gamebool>
 2ae:	81 30       	cpi	r24, 0x01	; 1
 2b0:	09 f0       	breq	.+2      	; 0x2b4 <map_tick+0x1e>
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	83 2f       	mov	r24, r19
 2b6:	92 2f       	mov	r25, r18
 2b8:	2b c0       	rjmp	.+86     	; 0x310 <map_tick+0x7a>
 2ba:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <index>
 2be:	94 df       	rcall	.-216    	; 0x1e8 <LCD_Cursor>
 2c0:	80 e2       	ldi	r24, 0x20	; 32
 2c2:	a9 df       	rcall	.-174    	; 0x216 <LCD_WriteData>
 2c4:	e5 df       	rcall	.-54     	; 0x290 <LCD_Cursor_Off>
 2c6:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <i>
 2ca:	8f 5f       	subi	r24, 0xFF	; 255
 2cc:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <i>
 2d0:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <index>
 2d4:	91 50       	subi	r25, 0x01	; 1
 2d6:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <index>
 2da:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <position>
 2de:	92 13       	cpse	r25, r18
 2e0:	05 c0       	rjmp	.+10     	; 0x2ec <map_tick+0x56>
 2e2:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <hit>
 2e6:	9f 5f       	subi	r25, 0xFF	; 255
 2e8:	90 93 98 01 	sts	0x0198, r25	; 0x800198 <hit>
 2ec:	80 35       	cpi	r24, 0x50	; 80
 2ee:	c9 f4       	brne	.+50     	; 0x322 <map_tick+0x8c>
 2f0:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <i>
 2f4:	80 e2       	ldi	r24, 0x20	; 32
 2f6:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <index>
 2fa:	23 c0       	rjmp	.+70     	; 0x342 <map_tick+0xac>
 2fc:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <i>
 300:	8f 5f       	subi	r24, 0xFF	; 255
 302:	88 30       	cpi	r24, 0x08	; 8
 304:	a1 f5       	brne	.+104    	; 0x36e <map_tick+0xd8>
 306:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <i>
 30a:	2d c0       	rjmp	.+90     	; 0x366 <map_tick+0xd0>
 30c:	80 e0       	ldi	r24, 0x00	; 0
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	82 30       	cpi	r24, 0x02	; 2
 312:	91 05       	cpc	r25, r1
 314:	b1 f0       	breq	.+44     	; 0x342 <map_tick+0xac>
 316:	83 30       	cpi	r24, 0x03	; 3
 318:	91 05       	cpc	r25, r1
 31a:	29 f1       	breq	.+74     	; 0x366 <map_tick+0xd0>
 31c:	81 30       	cpi	r24, 0x01	; 1
 31e:	91 05       	cpc	r25, r1
 320:	49 f5       	brne	.+82     	; 0x374 <map_tick+0xde>
 322:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <index>
 326:	80 31       	cpi	r24, 0x10	; 16
 328:	19 f4       	brne	.+6      	; 0x330 <map_tick+0x9a>
 32a:	80 e2       	ldi	r24, 0x20	; 32
 32c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <index>
 330:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <index>
 334:	59 df       	rcall	.-334    	; 0x1e8 <LCD_Cursor>
 336:	81 e0       	ldi	r24, 0x01	; 1
 338:	6e df       	rcall	.-292    	; 0x216 <LCD_WriteData>
 33a:	aa df       	rcall	.-172    	; 0x290 <LCD_Cursor_Off>
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	08 95       	ret
 342:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <hit>
 346:	88 23       	and	r24, r24
 348:	39 f0       	breq	.+14     	; 0x358 <map_tick+0xc2>
 34a:	64 e3       	ldi	r22, 0x34	; 52
 34c:	71 e0       	ldi	r23, 0x01	; 1
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	86 df       	rcall	.-244    	; 0x25e <LCD_DisplayString>
 352:	82 e0       	ldi	r24, 0x02	; 2
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	08 95       	ret
 358:	60 e4       	ldi	r22, 0x40	; 64
 35a:	71 e0       	ldi	r23, 0x01	; 1
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	7f df       	rcall	.-258    	; 0x25e <LCD_DisplayString>
 360:	82 e0       	ldi	r24, 0x02	; 2
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	08 95       	ret
 366:	3d df       	rcall	.-390    	; 0x1e2 <LCD_ClearScreen>
 368:	83 e0       	ldi	r24, 0x03	; 3
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	08 95       	ret
 36e:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <i>
 372:	e7 cf       	rjmp	.-50     	; 0x342 <map_tick+0xac>
 374:	08 95       	ret

00000376 <GetKeypadKey>:
 376:	8f ee       	ldi	r24, 0xEF	; 239
 378:	88 b9       	out	0x08, r24	; 8
 37a:	00 00       	nop
 37c:	30 9b       	sbis	0x06, 0	; 6
 37e:	29 c0       	rjmp	.+82     	; 0x3d2 <GetKeypadKey+0x5c>
 380:	31 9b       	sbis	0x06, 1	; 6
 382:	29 c0       	rjmp	.+82     	; 0x3d6 <GetKeypadKey+0x60>
 384:	32 9b       	sbis	0x06, 2	; 6
 386:	29 c0       	rjmp	.+82     	; 0x3da <GetKeypadKey+0x64>
 388:	33 9b       	sbis	0x06, 3	; 6
 38a:	29 c0       	rjmp	.+82     	; 0x3de <GetKeypadKey+0x68>
 38c:	8f ed       	ldi	r24, 0xDF	; 223
 38e:	88 b9       	out	0x08, r24	; 8
 390:	00 00       	nop
 392:	30 9b       	sbis	0x06, 0	; 6
 394:	26 c0       	rjmp	.+76     	; 0x3e2 <GetKeypadKey+0x6c>
 396:	31 9b       	sbis	0x06, 1	; 6
 398:	26 c0       	rjmp	.+76     	; 0x3e6 <GetKeypadKey+0x70>
 39a:	32 9b       	sbis	0x06, 2	; 6
 39c:	26 c0       	rjmp	.+76     	; 0x3ea <GetKeypadKey+0x74>
 39e:	33 9b       	sbis	0x06, 3	; 6
 3a0:	26 c0       	rjmp	.+76     	; 0x3ee <GetKeypadKey+0x78>
 3a2:	8f eb       	ldi	r24, 0xBF	; 191
 3a4:	88 b9       	out	0x08, r24	; 8
 3a6:	00 00       	nop
 3a8:	30 9b       	sbis	0x06, 0	; 6
 3aa:	23 c0       	rjmp	.+70     	; 0x3f2 <GetKeypadKey+0x7c>
 3ac:	31 9b       	sbis	0x06, 1	; 6
 3ae:	23 c0       	rjmp	.+70     	; 0x3f6 <GetKeypadKey+0x80>
 3b0:	32 9b       	sbis	0x06, 2	; 6
 3b2:	23 c0       	rjmp	.+70     	; 0x3fa <GetKeypadKey+0x84>
 3b4:	33 9b       	sbis	0x06, 3	; 6
 3b6:	23 c0       	rjmp	.+70     	; 0x3fe <GetKeypadKey+0x88>
 3b8:	8f e7       	ldi	r24, 0x7F	; 127
 3ba:	88 b9       	out	0x08, r24	; 8
 3bc:	00 00       	nop
 3be:	30 9b       	sbis	0x06, 0	; 6
 3c0:	20 c0       	rjmp	.+64     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3c2:	31 9b       	sbis	0x06, 1	; 6
 3c4:	20 c0       	rjmp	.+64     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3c6:	32 9b       	sbis	0x06, 2	; 6
 3c8:	20 c0       	rjmp	.+64     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3ca:	33 9b       	sbis	0x06, 3	; 6
 3cc:	20 c0       	rjmp	.+64     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	08 95       	ret
 3d2:	81 e3       	ldi	r24, 0x31	; 49
 3d4:	08 95       	ret
 3d6:	84 e3       	ldi	r24, 0x34	; 52
 3d8:	08 95       	ret
 3da:	87 e3       	ldi	r24, 0x37	; 55
 3dc:	08 95       	ret
 3de:	8a e2       	ldi	r24, 0x2A	; 42
 3e0:	08 95       	ret
 3e2:	82 e3       	ldi	r24, 0x32	; 50
 3e4:	08 95       	ret
 3e6:	85 e3       	ldi	r24, 0x35	; 53
 3e8:	08 95       	ret
 3ea:	88 e3       	ldi	r24, 0x38	; 56
 3ec:	08 95       	ret
 3ee:	80 e3       	ldi	r24, 0x30	; 48
 3f0:	08 95       	ret
 3f2:	83 e3       	ldi	r24, 0x33	; 51
 3f4:	08 95       	ret
 3f6:	86 e3       	ldi	r24, 0x36	; 54
 3f8:	08 95       	ret
 3fa:	89 e3       	ldi	r24, 0x39	; 57
 3fc:	08 95       	ret
 3fe:	83 e2       	ldi	r24, 0x23	; 35
 400:	08 95       	ret
 402:	81 e4       	ldi	r24, 0x41	; 65
 404:	08 95       	ret
 406:	82 e4       	ldi	r24, 0x42	; 66
 408:	08 95       	ret
 40a:	83 e4       	ldi	r24, 0x43	; 67
 40c:	08 95       	ret
 40e:	84 e4       	ldi	r24, 0x44	; 68
 410:	08 95       	ret

00000412 <keypad_tick>:
 412:	cf 93       	push	r28
 414:	df 93       	push	r29
 416:	ec 01       	movw	r28, r24
 418:	82 30       	cpi	r24, 0x02	; 2
 41a:	91 05       	cpc	r25, r1
 41c:	29 f1       	breq	.+74     	; 0x468 <keypad_tick+0x56>
 41e:	2c f4       	brge	.+10     	; 0x42a <keypad_tick+0x18>
 420:	00 97       	sbiw	r24, 0x00	; 0
 422:	49 f0       	breq	.+18     	; 0x436 <keypad_tick+0x24>
 424:	01 97       	sbiw	r24, 0x01	; 1
 426:	71 f0       	breq	.+28     	; 0x444 <keypad_tick+0x32>
 428:	58 c0       	rjmp	.+176    	; 0x4da <keypad_tick+0xc8>
 42a:	83 30       	cpi	r24, 0x03	; 3
 42c:	91 05       	cpc	r25, r1
 42e:	f9 f0       	breq	.+62     	; 0x46e <keypad_tick+0x5c>
 430:	04 97       	sbiw	r24, 0x04	; 4
 432:	01 f1       	breq	.+64     	; 0x474 <keypad_tick+0x62>
 434:	52 c0       	rjmp	.+164    	; 0x4da <keypad_tick+0xc8>
 436:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <selection>
 43a:	84 30       	cpi	r24, 0x04	; 4
 43c:	f1 f4       	brne	.+60     	; 0x47a <keypad_tick+0x68>
 43e:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <selection>
 442:	4b c0       	rjmp	.+150    	; 0x4da <keypad_tick+0xc8>
 444:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <selection>
 448:	81 30       	cpi	r24, 0x01	; 1
 44a:	19 f4       	brne	.+6      	; 0x452 <keypad_tick+0x40>
 44c:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <selection>
 450:	72 c0       	rjmp	.+228    	; 0x536 <keypad_tick+0x124>
 452:	82 30       	cpi	r24, 0x02	; 2
 454:	19 f4       	brne	.+6      	; 0x45c <keypad_tick+0x4a>
 456:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <selection>
 45a:	73 c0       	rjmp	.+230    	; 0x542 <keypad_tick+0x130>
 45c:	83 30       	cpi	r24, 0x03	; 3
 45e:	09 f0       	breq	.+2      	; 0x462 <keypad_tick+0x50>
 460:	3c c0       	rjmp	.+120    	; 0x4da <keypad_tick+0xc8>
 462:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <selection>
 466:	74 c0       	rjmp	.+232    	; 0x550 <keypad_tick+0x13e>
 468:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <selection>
 46c:	64 c0       	rjmp	.+200    	; 0x536 <keypad_tick+0x124>
 46e:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <selection>
 472:	67 c0       	rjmp	.+206    	; 0x542 <keypad_tick+0x130>
 474:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <selection>
 478:	6b c0       	rjmp	.+214    	; 0x550 <keypad_tick+0x13e>
 47a:	7d df       	rcall	.-262    	; 0x376 <GetKeypadKey>
 47c:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <x>
 480:	81 33       	cpi	r24, 0x31	; 49
 482:	31 f4       	brne	.+12     	; 0x490 <keypad_tick+0x7e>
 484:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <x>
 488:	84 e0       	ldi	r24, 0x04	; 4
 48a:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <selection>
 48e:	66 c0       	rjmp	.+204    	; 0x55c <keypad_tick+0x14a>
 490:	60 91 9e 01 	lds	r22, 0x019E	; 0x80019e <ind>
 494:	70 e0       	ldi	r23, 0x00	; 0
 496:	6d 5f       	subi	r22, 0xFD	; 253
 498:	7e 4f       	sbci	r23, 0xFE	; 254
 49a:	40 e1       	ldi	r20, 0x10	; 16
 49c:	50 e0       	ldi	r21, 0x00	; 0
 49e:	88 ea       	ldi	r24, 0xA8	; 168
 4a0:	91 e0       	ldi	r25, 0x01	; 1
 4a2:	72 d1       	rcall	.+740    	; 0x788 <strncpy>
 4a4:	10 92 b8 01 	sts	0x01B8, r1	; 0x8001b8 <reading+0x10>
 4a8:	9c de       	rcall	.-712    	; 0x1e2 <LCD_ClearScreen>
 4aa:	68 ea       	ldi	r22, 0xA8	; 168
 4ac:	71 e0       	ldi	r23, 0x01	; 1
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	d6 de       	rcall	.-596    	; 0x25e <LCD_DisplayString>
 4b2:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <ind>
 4b6:	8f 5f       	subi	r24, 0xFF	; 255
 4b8:	95 e6       	ldi	r25, 0x65	; 101
 4ba:	89 9f       	mul	r24, r25
 4bc:	21 2d       	mov	r18, r1
 4be:	11 24       	eor	r1, r1
 4c0:	98 2f       	mov	r25, r24
 4c2:	92 1b       	sub	r25, r18
 4c4:	96 95       	lsr	r25
 4c6:	92 0f       	add	r25, r18
 4c8:	92 95       	swap	r25
 4ca:	9f 70       	andi	r25, 0x0F	; 15
 4cc:	27 e1       	ldi	r18, 0x17	; 23
 4ce:	92 9f       	mul	r25, r18
 4d0:	80 19       	sub	r24, r0
 4d2:	11 24       	eor	r1, r1
 4d4:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <ind>
 4d8:	41 c0       	rjmp	.+130    	; 0x55c <keypad_tick+0x14a>
 4da:	61 e5       	ldi	r22, 0x51	; 81
 4dc:	71 e0       	ldi	r23, 0x01	; 1
 4de:	81 e0       	ldi	r24, 0x01	; 1
 4e0:	be de       	rcall	.-644    	; 0x25e <LCD_DisplayString>
 4e2:	d6 de       	rcall	.-596    	; 0x290 <LCD_Cursor_Off>
 4e4:	48 df       	rcall	.-368    	; 0x376 <GetKeypadKey>
 4e6:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <x>
 4ea:	81 34       	cpi	r24, 0x41	; 65
 4ec:	49 f0       	breq	.+18     	; 0x500 <keypad_tick+0xee>
 4ee:	18 f4       	brcc	.+6      	; 0x4f6 <keypad_tick+0xe4>
 4f0:	88 23       	and	r24, r24
 4f2:	f1 f0       	breq	.+60     	; 0x530 <keypad_tick+0x11e>
 4f4:	15 c0       	rjmp	.+42     	; 0x520 <keypad_tick+0x10e>
 4f6:	82 34       	cpi	r24, 0x42	; 66
 4f8:	51 f0       	breq	.+20     	; 0x50e <keypad_tick+0xfc>
 4fa:	83 34       	cpi	r24, 0x43	; 67
 4fc:	71 f0       	breq	.+28     	; 0x51a <keypad_tick+0x108>
 4fe:	10 c0       	rjmp	.+32     	; 0x520 <keypad_tick+0x10e>
 500:	70 de       	rcall	.-800    	; 0x1e2 <LCD_ClearScreen>
 502:	81 e0       	ldi	r24, 0x01	; 1
 504:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <selection>
 508:	c1 e0       	ldi	r28, 0x01	; 1
 50a:	d0 e0       	ldi	r29, 0x00	; 0
 50c:	27 c0       	rjmp	.+78     	; 0x55c <keypad_tick+0x14a>
 50e:	82 e0       	ldi	r24, 0x02	; 2
 510:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <selection>
 514:	c1 e0       	ldi	r28, 0x01	; 1
 516:	d0 e0       	ldi	r29, 0x00	; 0
 518:	21 c0       	rjmp	.+66     	; 0x55c <keypad_tick+0x14a>
 51a:	83 e0       	ldi	r24, 0x03	; 3
 51c:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <selection>
 520:	61 e5       	ldi	r22, 0x51	; 81
 522:	71 e0       	ldi	r23, 0x01	; 1
 524:	81 e0       	ldi	r24, 0x01	; 1
 526:	9b de       	rcall	.-714    	; 0x25e <LCD_DisplayString>
 528:	b3 de       	rcall	.-666    	; 0x290 <LCD_Cursor_Off>
 52a:	c1 e0       	ldi	r28, 0x01	; 1
 52c:	d0 e0       	ldi	r29, 0x00	; 0
 52e:	16 c0       	rjmp	.+44     	; 0x55c <keypad_tick+0x14a>
 530:	c1 e0       	ldi	r28, 0x01	; 1
 532:	d0 e0       	ldi	r29, 0x00	; 0
 534:	13 c0       	rjmp	.+38     	; 0x55c <keypad_tick+0x14a>
 536:	81 e0       	ldi	r24, 0x01	; 1
 538:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <gamebool>
 53c:	c2 e0       	ldi	r28, 0x02	; 2
 53e:	d0 e0       	ldi	r29, 0x00	; 0
 540:	0d c0       	rjmp	.+26     	; 0x55c <keypad_tick+0x14a>
 542:	6e e6       	ldi	r22, 0x6E	; 110
 544:	71 e0       	ldi	r23, 0x01	; 1
 546:	81 e0       	ldi	r24, 0x01	; 1
 548:	8a de       	rcall	.-748    	; 0x25e <LCD_DisplayString>
 54a:	c3 e0       	ldi	r28, 0x03	; 3
 54c:	d0 e0       	ldi	r29, 0x00	; 0
 54e:	06 c0       	rjmp	.+12     	; 0x55c <keypad_tick+0x14a>
 550:	64 e6       	ldi	r22, 0x64	; 100
 552:	71 e0       	ldi	r23, 0x01	; 1
 554:	81 e0       	ldi	r24, 0x01	; 1
 556:	83 de       	rcall	.-762    	; 0x25e <LCD_DisplayString>
 558:	c4 e0       	ldi	r28, 0x04	; 4
 55a:	d0 e0       	ldi	r29, 0x00	; 0
 55c:	ce 01       	movw	r24, r28
 55e:	df 91       	pop	r29
 560:	cf 91       	pop	r28
 562:	08 95       	ret

00000564 <gameplay_tick>:
 564:	cf 93       	push	r28
 566:	df 93       	push	r29
 568:	ec 01       	movw	r28, r24
 56a:	81 30       	cpi	r24, 0x01	; 1
 56c:	91 05       	cpc	r25, r1
 56e:	a9 f0       	breq	.+42     	; 0x59a <gameplay_tick+0x36>
 570:	1c f4       	brge	.+6      	; 0x578 <gameplay_tick+0x14>
 572:	89 2b       	or	r24, r25
 574:	41 f0       	breq	.+16     	; 0x586 <gameplay_tick+0x22>
 576:	47 c0       	rjmp	.+142    	; 0x606 <gameplay_tick+0xa2>
 578:	82 30       	cpi	r24, 0x02	; 2
 57a:	91 05       	cpc	r25, r1
 57c:	c9 f1       	breq	.+114    	; 0x5f0 <gameplay_tick+0x8c>
 57e:	03 97       	sbiw	r24, 0x03	; 3
 580:	09 f4       	brne	.+2      	; 0x584 <gameplay_tick+0x20>
 582:	4e c0       	rjmp	.+156    	; 0x620 <gameplay_tick+0xbc>
 584:	40 c0       	rjmp	.+128    	; 0x606 <gameplay_tick+0xa2>
 586:	91 e0       	ldi	r25, 0x01	; 1
 588:	80 e0       	ldi	r24, 0x00	; 0
 58a:	20 91 9d 01 	lds	r18, 0x019D	; 0x80019d <gamebool>
 58e:	21 30       	cpi	r18, 0x01	; 1
 590:	09 f0       	breq	.+2      	; 0x594 <gameplay_tick+0x30>
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	c9 2f       	mov	r28, r25
 596:	d8 2f       	mov	r29, r24
 598:	36 c0       	rjmp	.+108    	; 0x606 <gameplay_tick+0xa2>
 59a:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <i>
 59e:	8f 5f       	subi	r24, 0xFF	; 255
 5a0:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <i>
 5a4:	e8 de       	rcall	.-560    	; 0x376 <GetKeypadKey>
 5a6:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <x>
 5aa:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <i>
 5ae:	90 35       	cpi	r25, 0x50	; 80
 5b0:	d1 f0       	breq	.+52     	; 0x5e6 <gameplay_tick+0x82>
 5b2:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <jump>
 5b6:	91 11       	cpse	r25, r1
 5b8:	12 c0       	rjmp	.+36     	; 0x5de <gameplay_tick+0x7a>
 5ba:	91 e0       	ldi	r25, 0x01	; 1
 5bc:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <__data_start>
 5c0:	91 e1       	ldi	r25, 0x11	; 17
 5c2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <position>
 5c6:	82 33       	cpi	r24, 0x32	; 50
 5c8:	f1 f4       	brne	.+60     	; 0x606 <gameplay_tick+0xa2>
 5ca:	82 e0       	ldi	r24, 0x02	; 2
 5cc:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <jump>
 5d0:	81 e1       	ldi	r24, 0x11	; 17
 5d2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 5d6:	81 e0       	ldi	r24, 0x01	; 1
 5d8:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <position>
 5dc:	21 c0       	rjmp	.+66     	; 0x620 <gameplay_tick+0xbc>
 5de:	91 50       	subi	r25, 0x01	; 1
 5e0:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <jump>
 5e4:	1d c0       	rjmp	.+58     	; 0x620 <gameplay_tick+0xbc>
 5e6:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <i>
 5ea:	c2 e0       	ldi	r28, 0x02	; 2
 5ec:	d0 e0       	ldi	r29, 0x00	; 0
 5ee:	25 c0       	rjmp	.+74     	; 0x63a <gameplay_tick+0xd6>
 5f0:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <i>
 5f4:	8f 5f       	subi	r24, 0xFF	; 255
 5f6:	88 30       	cpi	r24, 0x08	; 8
 5f8:	19 f0       	breq	.+6      	; 0x600 <gameplay_tick+0x9c>
 5fa:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <i>
 5fe:	10 c0       	rjmp	.+32     	; 0x620 <gameplay_tick+0xbc>
 600:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <i>
 604:	0d c0       	rjmp	.+26     	; 0x620 <gameplay_tick+0xbc>
 606:	c1 30       	cpi	r28, 0x01	; 1
 608:	d1 05       	cpc	r29, r1
 60a:	51 f0       	breq	.+20     	; 0x620 <gameplay_tick+0xbc>
 60c:	1c f4       	brge	.+6      	; 0x614 <gameplay_tick+0xb0>
 60e:	20 97       	sbiw	r28, 0x00	; 0
 610:	21 f4       	brne	.+8      	; 0x61a <gameplay_tick+0xb6>
 612:	13 c0       	rjmp	.+38     	; 0x63a <gameplay_tick+0xd6>
 614:	c4 30       	cpi	r28, 0x04	; 4
 616:	d1 05       	cpc	r29, r1
 618:	84 f0       	brlt	.+32     	; 0x63a <gameplay_tick+0xd6>
 61a:	c0 e0       	ldi	r28, 0x00	; 0
 61c:	d0 e0       	ldi	r29, 0x00	; 0
 61e:	0d c0       	rjmp	.+26     	; 0x63a <gameplay_tick+0xd6>
 620:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 624:	e1 dd       	rcall	.-1086   	; 0x1e8 <LCD_Cursor>
 626:	80 e2       	ldi	r24, 0x20	; 32
 628:	f6 dd       	rcall	.-1044   	; 0x216 <LCD_WriteData>
 62a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <position>
 62e:	dc dd       	rcall	.-1096   	; 0x1e8 <LCD_Cursor>
 630:	82 e0       	ldi	r24, 0x02	; 2
 632:	f1 dd       	rcall	.-1054   	; 0x216 <LCD_WriteData>
 634:	2d de       	rcall	.-934    	; 0x290 <LCD_Cursor_Off>
 636:	c1 e0       	ldi	r28, 0x01	; 1
 638:	d0 e0       	ldi	r29, 0x00	; 0
 63a:	ce 01       	movw	r24, r28
 63c:	df 91       	pop	r29
 63e:	cf 91       	pop	r28
 640:	08 95       	ret

00000642 <main>:




int main(void)
{
 642:	cf 93       	push	r28
 644:	df 93       	push	r29
 646:	00 d0       	rcall	.+0      	; 0x648 <main+0x6>
 648:	00 d0       	rcall	.+0      	; 0x64a <main+0x8>
 64a:	00 d0       	rcall	.+0      	; 0x64c <main+0xa>
 64c:	cd b7       	in	r28, 0x3d	; 61
 64e:	de b7       	in	r29, 0x3e	; 62
	DDRA = 0xFF; PORTA = 0x00;
 650:	8f ef       	ldi	r24, 0xFF	; 255
 652:	81 b9       	out	0x01, r24	; 1
 654:	12 b8       	out	0x02, r1	; 2
	DDRB = 0xFF; PORTB = 0x00; // PORTB set to output, outputs init 0s
 656:	84 b9       	out	0x04, r24	; 4
 658:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xF0; PORTC = 0x0F; // PC7..4 outputs init 0s, PC3..0 inputs init 1s
 65a:	90 ef       	ldi	r25, 0xF0	; 240
 65c:	97 b9       	out	0x07, r25	; 7
 65e:	9f e0       	ldi	r25, 0x0F	; 15
 660:	98 b9       	out	0x08, r25	; 8
	DDRD = 0xFF; PORTD = 0xFF;
 662:	8a b9       	out	0x0a, r24	; 10
 664:	8b b9       	out	0x0b, r24	; 11
	static task task1, gameplay,map, task2;
	LCD_build();
 666:	e0 dd       	rcall	.-1088   	; 0x228 <LCD_build>
	task1.state = keypad_state;
 668:	ec e8       	ldi	r30, 0x8C	; 140
 66a:	f1 e0       	ldi	r31, 0x01	; 1
 66c:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <keypad_state>
 670:	80 83       	st	Z, r24
	task1.period = 250;
 672:	8a ef       	ldi	r24, 0xFA	; 250
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	a0 e0       	ldi	r26, 0x00	; 0
 678:	b0 e0       	ldi	r27, 0x00	; 0
 67a:	81 83       	std	Z+1, r24	; 0x01
 67c:	92 83       	std	Z+2, r25	; 0x02
 67e:	a3 83       	std	Z+3, r26	; 0x03
 680:	b4 83       	std	Z+4, r27	; 0x04
	task1.elapsedTime = 0;
 682:	15 82       	std	Z+5, r1	; 0x05
 684:	16 82       	std	Z+6, r1	; 0x06
 686:	17 82       	std	Z+7, r1	; 0x07
 688:	10 86       	std	Z+8, r1	; 0x08
	task1.TickFct = &keypad_tick;
 68a:	29 e0       	ldi	r18, 0x09	; 9
 68c:	32 e0       	ldi	r19, 0x02	; 2
 68e:	32 87       	std	Z+10, r19	; 0x0a
 690:	21 87       	std	Z+9, r18	; 0x09
	
	gameplay.state = game_state;
 692:	e1 e8       	ldi	r30, 0x81	; 129
 694:	f1 e0       	ldi	r31, 0x01	; 1
 696:	20 91 9c 01 	lds	r18, 0x019C	; 0x80019c <game_state>
 69a:	20 83       	st	Z, r18
	gameplay.period = 250;
 69c:	81 83       	std	Z+1, r24	; 0x01
 69e:	92 83       	std	Z+2, r25	; 0x02
 6a0:	a3 83       	std	Z+3, r26	; 0x03
 6a2:	b4 83       	std	Z+4, r27	; 0x04
	gameplay.elapsedTime = 0;
 6a4:	15 82       	std	Z+5, r1	; 0x05
 6a6:	16 82       	std	Z+6, r1	; 0x06
 6a8:	17 82       	std	Z+7, r1	; 0x07
 6aa:	10 86       	std	Z+8, r1	; 0x08
	gameplay.TickFct = &gameplay_tick;
 6ac:	22 eb       	ldi	r18, 0xB2	; 178
 6ae:	32 e0       	ldi	r19, 0x02	; 2
 6b0:	32 87       	std	Z+10, r19	; 0x0a
 6b2:	21 87       	std	Z+9, r18	; 0x09
	
	map.state = map_state;
 6b4:	e6 e7       	ldi	r30, 0x76	; 118
 6b6:	f1 e0       	ldi	r31, 0x01	; 1
 6b8:	20 91 9b 01 	lds	r18, 0x019B	; 0x80019b <map_state>
 6bc:	20 83       	st	Z, r18
	map.period = 250;
 6be:	81 83       	std	Z+1, r24	; 0x01
 6c0:	92 83       	std	Z+2, r25	; 0x02
 6c2:	a3 83       	std	Z+3, r26	; 0x03
 6c4:	b4 83       	std	Z+4, r27	; 0x04
	map.elapsedTime = 0;
 6c6:	15 82       	std	Z+5, r1	; 0x05
 6c8:	16 82       	std	Z+6, r1	; 0x06
 6ca:	17 82       	std	Z+7, r1	; 0x07
 6cc:	10 86       	std	Z+8, r1	; 0x08
	map.TickFct = &map_tick;
 6ce:	8b e4       	ldi	r24, 0x4B	; 75
 6d0:	91 e0       	ldi	r25, 0x01	; 1
 6d2:	92 87       	std	Z+10, r25	; 0x0a
	
	LCD_init();
 6d4:	81 87       	std	Z+9, r24	; 0x09
 6d6:	90 dd       	rcall	.-1248   	; 0x1f8 <LCD_init>

	in = 0;
 6d8:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <in>
	
	task *tasks[] = { &task1, &gameplay, &map };
 6dc:	86 e0       	ldi	r24, 0x06	; 6
 6de:	ee e2       	ldi	r30, 0x2E	; 46
 6e0:	f1 e0       	ldi	r31, 0x01	; 1
 6e2:	de 01       	movw	r26, r28
 6e4:	11 96       	adiw	r26, 0x01	; 1
 6e6:	01 90       	ld	r0, Z+
 6e8:	0d 92       	st	X+, r0
 6ea:	8a 95       	dec	r24
 6ec:	e1 f7       	brne	.-8      	; 0x6e6 <main+0xa4>
	
	TimerSet(1);
 6ee:	61 e0       	ldi	r22, 0x01	; 1
 6f0:	70 e0       	ldi	r23, 0x00	; 0
 6f2:	80 e0       	ldi	r24, 0x00	; 0
 6f4:	90 e0       	ldi	r25, 0x00	; 0
	TimerOn();
 6f6:	e8 dc       	rcall	.-1584   	; 0xc8 <TimerSet>
 6f8:	f8 dc       	rcall	.-1552   	; 0xea <TimerOn>
 6fa:	7e 01       	movw	r14, r28
 6fc:	87 e0       	ldi	r24, 0x07	; 7
 6fe:	e8 0e       	add	r14, r24
 700:	f1 1c       	adc	r15, r1
	unsigned short i;
	while(1) {
		A = ~PINA;
 702:	80 b1       	in	r24, 0x00	; 0
 704:	80 95       	com	r24
 706:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <A>
 70a:	de 01       	movw	r26, r28
 70c:	11 96       	adiw	r26, 0x01	; 1
 70e:	6d 01       	movw	r12, r26
		for ( i = 0; i < 3; i++ ) {
			// Task is ready to tick
			if ( tasks[i]->elapsedTime == tasks[i]->period ) {
 710:	f6 01       	movw	r30, r12
 712:	01 91       	ld	r16, Z+
 714:	11 91       	ld	r17, Z+
 716:	6f 01       	movw	r12, r30
 718:	d8 01       	movw	r26, r16
 71a:	15 96       	adiw	r26, 0x05	; 5
 71c:	4d 91       	ld	r20, X+
 71e:	5d 91       	ld	r21, X+
 720:	6d 91       	ld	r22, X+
 722:	7c 91       	ld	r23, X
 724:	18 97       	sbiw	r26, 0x08	; 8
 726:	11 96       	adiw	r26, 0x01	; 1
 728:	8d 91       	ld	r24, X+
 72a:	9d 91       	ld	r25, X+
 72c:	0d 90       	ld	r0, X+
 72e:	bc 91       	ld	r27, X
 730:	a0 2d       	mov	r26, r0
 732:	48 17       	cp	r20, r24
 734:	59 07       	cpc	r21, r25
 736:	6a 07       	cpc	r22, r26
 738:	7b 07       	cpc	r23, r27
 73a:	81 f4       	brne	.+32     	; 0x75c <main+0x11a>
				// Setting next state for task
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 73c:	f8 01       	movw	r30, r16
 73e:	80 81       	ld	r24, Z
 740:	01 84       	ldd	r0, Z+9	; 0x09
 742:	f2 85       	ldd	r31, Z+10	; 0x0a
 744:	e0 2d       	mov	r30, r0
 746:	08 2e       	mov	r0, r24
 748:	00 0c       	add	r0, r0
 74a:	99 0b       	sbc	r25, r25
 74c:	09 95       	icall
 74e:	d8 01       	movw	r26, r16
 750:	8c 93       	st	X, r24
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
 752:	f8 01       	movw	r30, r16
 754:	15 82       	std	Z+5, r1	; 0x05
 756:	16 82       	std	Z+6, r1	; 0x06
 758:	17 82       	std	Z+7, r1	; 0x07
 75a:	10 86       	std	Z+8, r1	; 0x08
			}
			tasks[i]->elapsedTime += 1;
 75c:	f8 01       	movw	r30, r16
 75e:	85 81       	ldd	r24, Z+5	; 0x05
 760:	96 81       	ldd	r25, Z+6	; 0x06
 762:	a7 81       	ldd	r26, Z+7	; 0x07
 764:	b0 85       	ldd	r27, Z+8	; 0x08
 766:	01 96       	adiw	r24, 0x01	; 1
 768:	a1 1d       	adc	r26, r1
 76a:	b1 1d       	adc	r27, r1
 76c:	85 83       	std	Z+5, r24	; 0x05
 76e:	96 83       	std	Z+6, r25	; 0x06
 770:	a7 83       	std	Z+7, r26	; 0x07
 772:	b0 87       	std	Z+8, r27	; 0x08
	TimerSet(1);
	TimerOn();
	unsigned short i;
	while(1) {
		A = ~PINA;
		for ( i = 0; i < 3; i++ ) {
 774:	ce 14       	cp	r12, r14
 776:	df 04       	cpc	r13, r15
 778:	59 f6       	brne	.-106    	; 0x710 <main+0xce>
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 1;
		}
		while(!TimerFlag);
 77a:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <TimerFlag>
 77e:	88 23       	and	r24, r24
 780:	e1 f3       	breq	.-8      	; 0x77a <main+0x138>
		TimerFlag = 0;
 782:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <TimerFlag>
	}
 786:	bd cf       	rjmp	.-134    	; 0x702 <main+0xc0>

00000788 <strncpy>:
 788:	fb 01       	movw	r30, r22
 78a:	dc 01       	movw	r26, r24
 78c:	41 50       	subi	r20, 0x01	; 1
 78e:	50 40       	sbci	r21, 0x00	; 0
 790:	48 f0       	brcs	.+18     	; 0x7a4 <strncpy+0x1c>
 792:	01 90       	ld	r0, Z+
 794:	0d 92       	st	X+, r0
 796:	00 20       	and	r0, r0
 798:	c9 f7       	brne	.-14     	; 0x78c <strncpy+0x4>
 79a:	01 c0       	rjmp	.+2      	; 0x79e <strncpy+0x16>
 79c:	1d 92       	st	X+, r1
 79e:	41 50       	subi	r20, 0x01	; 1
 7a0:	50 40       	sbci	r21, 0x00	; 0
 7a2:	e0 f7       	brcc	.-8      	; 0x79c <strncpy+0x14>
 7a4:	08 95       	ret

000007a6 <_exit>:
 7a6:	f8 94       	cli

000007a8 <__stop_program>:
 7a8:	ff cf       	rjmp	.-2      	; 0x7a8 <__stop_program>
